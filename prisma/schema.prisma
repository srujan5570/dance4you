generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  passwordHash  String
  role          Role      @default(STUDENT)
  createdAt     DateTime  @default(now())
  emailVerified Boolean   @default(false)
  otpExpires    DateTime?
  otpHash       String?
  bookings      Booking[]
  events        Event[]
}

model Event {
  id          String    @id @default(cuid())
  title       String
  city        String
  date        String
  style       String
  image       String
  description String?
  // Contact fields (visible only to booked customers in UI)
  contactPhone String?
  contactEmail String?
  venueAddress String?
  venueMapUrl  String?
  contactNotes String?
  // Precise map coordinates
  locationLat  Float?
  locationLng  Float?
  createdAt   DateTime  @default(now())
  ownerId     String?
  bookings    Booking[]
  owner       User?     @relation(fields: [ownerId], references: [id])
}

model Booking {
  id        String        @id @default(cuid())
  eventId   String
  name      String
  email     String
  tickets   Int           @default(1)
  note      String?
  createdAt DateTime      @default(now())
  status    BookingStatus @default(ACTIVE)
  userId    String?
  event     Event         @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user      User?         @relation(fields: [userId], references: [id])
}

enum Role {
  STUDENT
  STUDIO_OWNER
}

enum BookingStatus {
  ACTIVE
  CANCELLED
}