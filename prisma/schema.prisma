// prisma/schema.prisma
// SQLite for local dev; can switch provider and connection string for production later

// Specify database
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Generate Prisma Client
generator client {
  provider = "prisma-client-js"
}

enum Role {
  STUDENT
  STUDIO_OWNER
}

// Add booking status enum
enum BookingStatus {
  ACTIVE
  CANCELLED
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  passwordHash String
  role         Role     @default(STUDENT)
  createdAt    DateTime @default(now())

  // Relations
  bookings     Booking[]
  events       Event[]
}

model Event {
  id          String   @id @default(cuid())
  title       String
  city        String
  date        String   // store ISO yyyy-mm-dd for simplicity
  style       String   // "Indian" | "Western"
  image       String
  description String?
  createdAt   DateTime @default(now())
  ownerId     String?

  // Relations
  bookings    Booking[]
  owner       User?    @relation(fields: [ownerId], references: [id], onDelete: SetNull)
}

model Booking {
  id        String   @id @default(cuid())
  eventId   String
  name      String
  email     String
  tickets   Int      @default(1)
  note      String?
  createdAt DateTime @default(now())
  status    BookingStatus @default(ACTIVE)

  // Relations
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
}